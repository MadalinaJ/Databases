
1. List the commands for adding, updating, and deleting data.

	Add data: INSERT INTO

	Update data: UPDATE

	Delete data: DELETE

2. Explain the structure for each type of command.

CREATE Table name(

		column datatype,

 		column datatype,
	); 

	- it creates the table; it needs the name of the table, name of the columns and what datatype will be used.

INSERT INTO tableName (column, column)

VALUES

(value, value),

(value, value);

	- adds data to the table; it needs the name of the table and columns; the values in the correct order.


UPDATE tableName SET columnName = valueUpdated WHERE condition;

	- it updates an already existing value in the table depending on the condition.

DELETE FROM tableName WHERE condition;

	- deletes a row in the table depending on the condition

ALTER TABLE tableName ADD COLUMN columnName datatype / DROP COLUMN columnName;

	-add or delete rows in the table

DROP TABLE tableName; - deletes the entire table; 


3. What are some of the data types that can be used in tables? Give a real-world example of each type.

	String/Text: a person’s name, descriptions, company name etc.

	Int:  10 - ex how many cats have been adopted this week - 10.

	Float: an exact measurement - 12.5 oz.

	Boolean (true/ false): ex - if something is at a specific location or not, etc.


4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

- Which data type would you use to store each of the following pieces of information?

	First and last name- TEXT

	Whether they sent in their RSVP-  BOOLEAN

	Number of guests- INT

	Number of meals - NUMERIC

- Write a command that creates the table to track the wedding dinner.

CREATE TABLE dinner (

	fullName text,

	rsvp boolean,

	guests int,

	meals numeric(2, 1)

);

- Write a command that adds a column to track whether the guest sent a thank you card.

	ALTER TABLE dinner ADD COLUMN thankYouCard boolean;

- You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.

	ALTER TABLE dinner DROP COLUMN meals;

- The guests will need a place to sit at the reception, so write a command that adds a column for table number.

	ALTER TABLE dinner ADD COLUMN tableNumber int;

- The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.

	ALTER TABLE dinner DROP COLUMN tableNumber;

5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

CREATE TABLE books (

	ISBN bigint,

	title text ,

	author text ,

	genre text ,

	publishingDate date ,

	numberOfCopies int ,

	availableCopies int

); 

- Find three books and add their information to the table.

	INSERT INTO books (ISBN, title, author, genre, publishing date, number of copies, available copies)

	VALUES

	(0440351626, 'The Magus', 'John Fowles', 'Fiction', '1985-04-01', 10, 4),

	(0345315588, 'Children of Time', 'Arthur C. Clarke’, ’SF’, ’1983-10-08', 14, 7),

	(1788280806, ’The Sherlock Holmes Collection’, ’Sir Arthur Conan Doyle’, ‘Mystery’, '1990-10-03', 8, 7);


- Someone has just checked out one of the books. Change the number of available copies to 1 fewer.

	UPDATE books SET availableCopies = availableCopies - 1 WHERE ISBN=0345315588;

- Now one of the books has been added to the banned books list. Remove it from the table.

	DELETE FROM books WHERE ISBN=0440351626;


6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:

CREATE TABLE spacecrafts(

	id int,

	name text,

	yearLaunched text,

	countryOfOrigin text,

	mission text,

	orbitingBody text,

	currentlyOperating boolean,

	milesFromEarth bigint

); 

- Add three non-Earth-orbiting satellites to the table.

	INSERT INTO spacecrafts (id, name, yearLaunched, countryOfOrigin, mission, orbitingBody, currentlyOperating, milesFromEarth)

	VALUES

	(1, ‘Maven’, ‘1989’, ‘USA’, ' atmosphere study on Mars’, ‘Mars’, true, 400000),

	(2, ‘Galileo’, ’1989’, 'USA', 'studied the planet Jupiter and its moons ', ‘Jupiter’, false, 500000),

	(3, 'Mangalyaan', '2013', 'India', ‘study the planets surface ', 'Mars', true, 400000);


- Remove one of the satellites from the table since it has just crashed into the planet.

	DELETE FROM spacecrafts WHERE id=2;

- Edit another satellite because it is no longer operating and change the value to reflect that.

	UPDATE spacecrafts SET currentlyOperating=false WHERE id=3;


7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:

CREATE TABLE inbox(

	id int,

	subjectLine text ,

	sender varchar(320),

	additionalRecipients varchar(320),

	emailBody text ,

	timeStamp date ,

	read boolean,

	idEmailChain int

); 

- Add three new emails to the inbox.

	INSERT INTO inbox(id, subjectLine, sender, additionalRecipients, emailBody, timeStamp, read, idEmailChain)

	VALUES

	(1, ‘Laylah vet’, 'Mary@mmm.com', ‘doly@mmm.com', 'Don'’t forget to bring Laylah on Monday’, '2019-07-22 10:22:11’, true, 1000),

	(2, ‘bank’, ‘hector@bank.com’, NULL, ‘new payment’, '2019-06-15 10:05:11', true, 2000),

	(3, ‘concert tickets’, ‘ulrich@lll.com’, NULL, 'Don''t forget next weekend’, '2019-05-07 10:31:13’, true, 3000);


- You deleted one of the emails, so write a command to remove the row from the inbox table.

	DELETE from inbox WHERE id=3;

- You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.

	UPDATE inbox SET read=false WHERE id=2;
